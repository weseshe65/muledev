Useful Links
============

Maven
-----
https://github.com/mulesoft-catalyst
https://maven.apache.org/guides/getting-started/index.html
https://maven.apache.org/guides/getting-started/maven-in-five-minutes.html
https://www.baeldung.com/maven




Cloudshare
----------
URL:				https://use.cloudshare.com/Class/r7uyk
PassPhrase:	I Love APIs	


Important Maven Commands
------------------------
mvn clean install
mvn clean
mvn clean verify
mvn clean verify -U -Dencrypt.key=secure12345
mvn install:install-file -Dfile=parent-pom/pom.xml -DpomFile=parent-pom/pom.xml
mvn install:install-file -Dfile=bom/pom.xml -DpomFile=bom/pom.xml
mvn clean verify -U -Dencrypt.key=secure12345 -DskipMunitTests

Day 1
=====

install poms into .m2 local repo
--------------------------------
mvn install:install-file -Dfile=bom/pom.xml -DpomFile=bom/pom.xml

Studio Runtime Confiruration
----------------------------
-M-Dencrypt.key=secure12345
-M-Danypoint.platform.gatekeeper=disabled

check-in
--------
PUT
https://localhost:8081/api/v1/tickets/PNR123/checkin
body
----
{ 
	"lastName": "Smith", 
	"numBags": 2 
}

payment approval
----------------
PUT
https://localhost:8081/api/v1/tickets/PNR123/paymentApproval

body
----
{ 
	"payerID": "PID1", 
	"paymentID": "PMT1" 
}


availability check
------------------
https://tngaa-flights-management-sapi-dev-9yj2rh.rajrd4-2.usa-e1.cloudhub.io/alive
https://tngaa-passenger-data-sapi-dev-9yj2rh.rajrd4-2.usa-e1.cloudhub.io/alive
https://tngaa-paypal-sapi-dev-9yj2rh.rajrd4-2.usa-e1.cloudhub.io/alive

flightsManagementSapiConfig
host:     tngaa-flights-management-sapi-dev-9yj2rh.rajrd4-2.usa-e1.cloudhub.io
basePath: /api/v1
username: e66105d66e8b4520b091127620221cce
password: A1c099D51C50420b84641D71b229EBac

passengerDataSapiConfig
-----------------------
host:     tngaa-passenger-data-sapi-dev-9yj2rh.rajrd4-2.usa-e1.cloudhub.io
basePath: /api/v1

paypalSapiConfig
----------------
host:     tngaa-paypal-sapi-dev-9yj2rh.rajrd4-2.usa-e1.cloudhub.io
basePath: /api/v1

%dw 2.0
output application/json
---
{
	lastName:	vars.checkIn.lastName,
	numBags:	vars.checkIn.numBags
}

/tickets/{PNR}/checkin

Day 2
=====

vars.ticket.ticketHolderPassPortNo

not vars.ticket.ticketHolderLastName == vars.checkIn.lastName

APP:LASTNAME_MISMATCH

not vars.passenger.lastName == vars.checkIn.lastName
  
output application/json
---
{
	errorMessage: "Invalid passenger name or bad data uploaded"
}  
  
APP:CANT_UPDATE_CHECKINS  
  
%dw 2.0
output application/json
---
{
	date_checkin:	now() >> "UTC",
	destination:	vars.ticket.destination,
	flight_date:	vars.ticket.flightDate,
	flight_no:		vars.ticket.flightNo,
	origin:			vars.ticket.origin
}  

vars.passenger.loyaltyNo

APP:CANT_CREATE_PASSENGER_FLIGHT

%dw 2.0
output application/json
var numBags = vars.checkIn.numBags
var bagRate = 35
---
{
	description:	"Check-In of $( numBags as String ) bags at EUR $( bagRate ) each.",
	amount:			bagRate * ( numBags as Number )
}

%dw 2.0
output application/json
var paypalReturn = payload
---
{
  paymentID: paypalReturn.paymentID
}

POST
https://localhost:8081/api/v1/payments	
{
    "amount": 12.34,
    "description": "something"
}


PUT
https://localhost:8081/api/v1/payments/PAY-1B56960729604235TKQQIYVY/approval
{
    "payerID": "STJ8222K092ST"
}

curl -ik -X POST -H "Accept: application/json" -H "Accept-Language: en_US" -u "APP-80ANYAIRLINE8184JT3:1929FHDUAL8392K9ABKSNMM" -d "grant_type=client_credentials" https://training-paypal-fake-api-sandbox-mjf1rw.5sc6y6-1.usa-e2.cloudhub.io/v1/oauth2/token

curl -i -X POST -H "Content-Type: application/json" -H "Authorization: Bearer 482slsk.QISKEkdls8345_Zsrq9cK9hNsqrEU9xem4Qsod844D382fjff" -d "{ \"intent\":\"sale\", \"payer\":{ \"payment_method\":\"paypal\" }, \"transactions\":[ { \"amount\":{ \"total\":\"80.00\", \"currency\":\"USD\" }, \"description\": \"Check-In Baggage.\", \"custom\": \"ANYAIRLINE_90048630024435\", \"invoice_number\": \"48787589673\", \"payment_options\":{ \"allowed_payment_method\":\"INSTANT_FUNDING_SOURCE\" }, \"soft_descriptor\":\"ANYAIRLINE BAGGAGE\" } ], \"note_to_payer\":\"Be happy.\" }" https://training-paypal-fake-api-sandbox-mjf1rw.5sc6y6-1.usa-e2.cloudhub.io/v1/payments/payment

https://tngaa-flights-management-devx-9yj2rh.d5n5q8.usa-e1.cloudhub.io/api/v1/FlightsManagementService?wsdl

output application/xml
ns ns0 http://flightsMgmt.sword.com/
---
{
	ns0#checkIn: {
		pnr: 				vars.PNR,
		passengerLastName: 	payload.lastName,
		numOfBags: 			payload.numBags
	}
}

{message: 'Passenger check-in successful.'}

output application/java --- payload.body.checkInResponse.return as Boolean

https://tngaa-flights-management-devx.nonprod-internalps.anyair.net/api/v1/FlightsManagementService?wsdl

https://localhost:8081/api/cancelFlight

POST

<CancellationNotification>
	<PNR>PNR123</PNR>
	<PassengerLastName>Mule</PassengerLastName>
</CancellationNotification>

Day 3
=====

{ myMessage: payload, receiveddAt: now() }  

%dw 2.0
output application/json
---
{
	pnr:					payload.CancellationNotification.PNR,
	lastNameOfPassenger:	payload.CancellationNotification.PassengerLastName
}  

https://github.com/mulesoft-catalyst


Message has been processed from DLQ at #[ now() ]  
https://github.com/mulesoft

URL:            https://mq-us-east-1.anypoint.mulesoft.com/api/v1/organizations/a63e6d25-8aaf-4512-b36d-d91b90a55c4a/environments/129441e8-ae69-4cf9-a70b-cdabca4823ff
client-id:      b58581e1242d4e10bdca4103cee00181
client-secret:  b063BAe915a449A8A00AAe4f1e2aA3D4
Exchange name:  cancelled-flights-exchg-dev  

Queue name:		cancelled-flights-mobile-queue-dev-studentXX

{ status: "Message received", content: payload, dateTime: now() }

https://tngaa-flights-management-sapi-dev-9yj2rh.rajrd4-2.usa-e1.cloudhub.io/api/cancelFlight

%dw 2.0
output application/json
---
{
	pnr:		payload.pnr,
	lastName:	payload.lastNameOfPassenger
}

VM:CONNECTIVITY, VM:QUEUE_TIMEOUT

mvn -B -f bom/pom.xml archetype:generate -DarchetypeGroupId=org.mule.extensions -DarchetypeArtifactId=mule-extensions-xml-archetype -DarchetypeVersion=1.2.0 -DgroupId=<YOUR_ORG_ID> -DartifactId=resilience-mule-extension -DmuleConnectorName=resilience-mule-extension -DextensionName=resilience -Dpackage=. -DoutputDirectory=../



https://en.wikipedia.org/wiki/Robustness_principle

#[ var ct = attributes.headers."content-type" --- ( not isBlank(ct) ) and ( lower(ct) contains "/xml" )  ]

output text/plain --- payload.^raw


#[ [ "VALIDATION" ] contains error.errorType.namespace ]

output text/plain --- vars.originalPayload

<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="CancellationNotification">
    <xs:complexType>
      <xs:sequence>
        <xs:element type="xs:string" name="PNR" minOccurs="1" maxOccurs="1"/>
        <xs:element type="xs:string" name="PassengerLastName" minOccurs="1" maxOccurs="1"/>
        <xs:any processContents="lax" minOccurs="0" maxOccurs="3"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>
 JSON Schema
{
    "$schema": "https://json-schema.org/draft/2019-09/schema",
    "$id": "http://example.com/example.json",
    "type": "object",
    "default": {},
    "title": "Root Schema",
    "required": [
        "pnr",
        "lastNameOfPassenger"
    ],
    "properties": {
        "pnr": {
            "type": "string",
            "default": "",
            "title": "The pnr Schema",
            "examples": [
                "PNR123"
            ]
        },
        "lastNameOfPassenger": {
            "type": "string",
            "default": "",
            "title": "The lastNameOfPassenger Schema",
            "examples": [
                "Mule"
            ]
        }
    },
    "examples": [{
        "pnr": "PNR123",
        "lastNameOfPassenger": "Mule"
    }]
}
  not lower(vars.ticket.ticketHolderLastName) == lower(vars.checkIn.lastName)

not lower(vars.passenger.lastName) == lower(vars.checkIn.lastName)


Day 4
=====
MULE:COMPOSITE_ROUTING
error.errorMessage.payload.failures

vars.successfulRouteIndexes map vars.allCompensationFlows[$]
compensationFlows
/payments/{PaymentID}/approval

payload.payerID

output application/json --- { payerID: message.payload.payerID }

%dw 2.0
output application/json
---
{
  PNR: 				vars.PNR,
  airportArrive: 	payload.ticket.destination,
  class: 		 	payload.ticket.class,
  bagsCount: 	 	payload.checkIn.numBags,
  lastName:			payload.ticket.ticketHolderLastName,
  seat:				payload.ticket.seat,
  flightDate:		payload.ticket.flightDate,
  flight:			payload.ticket.flightNo,
  boarding:			payload.ticket.boarding,
  airportDepart:	payload.ticket.origin,
  gate:				payload.ticket.gate,
  depart:			payload.ticket.depart
}


{ 
	"payerID": "STJ8222K092ST", 
	"paymentID": "PAY-1B56960729604235TKQQIYVY" 
}
#[ [ "TOO_MANY_REQUESTS", "INTERNAL_SERVER_ERROR", "SERVICE_UNAVAILABLE", "TIMEOUT", "CONNECTIVITY" ] contains error.errorType.identifier ]

#[ ( error.errorType.namespace == "HTTP" ) or ( [ "EXPRESSION", "STREAM_MEXIMUM_SIZE_EXCEEDED" ] contains  error.errorType.identifier ) ]

#[vars.successful]
https://jsonplaceholder.typicode.com/

get ticket by pnr

<flow name="get-ticket-by-pnr" doc:id="e083a098-b425-46e7-9621-ff533a03efc7" >		<try doc:name="Try" doc:id="56c92e4c-4976-4150-844b-7e115fec6494" >			<until-successful maxRetries="3" doc:name="Until Successful 3/2000" doc:id="54fd0e11-1388-4181-b8bf-62d2e352310f" millisBetweenRetries="2000">			<try doc:name="Try" doc:id="2e6c45f8-c13c-47fb-be41-e9ae3b00d2e3">				<http:request method="GET" doc:name="Retrive Ticket GET/ticket/{PNR}" doc:id="d1dcb5b2-3052-47ce-b6a3-b96c230b2f1b" config-ref="flightsManagementSapiConfig" path="/tickets/{PNR}" target="ticket">			<http:uri-params><![CDATA[#[output application/java---{	PNR : vars.PNR}]]]></http:uri-params>		</http:request>				<set-variable value="#[true]" doc:name="successful = true" doc:id="0de8fdfb-8fd2-4bca-9c44-a2e0e671a397" variableName="successful" />				<error-handler>					<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="7a73913a-b4fe-433d-84da-2d4eb0df25f3" when='#[ [ "TOO_MANY_REQUESTS", "INTERNAL_SERVER_ERROR", "SERVICE_UNAVAILABLE", "TIMEOUT", "CONNECTIVITY" ] contains error.errorType.identifier ]'>						<set-variable value="#[false]" doc:name="successful = false" doc:id="b6029a93-0aa5-4ba1-8b0f-fc9d73534de9" variableName="successful" />					</on-error-propagate>					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="7bd0b0c7-7ab9-44c3-8997-1f31700590a7" when='#[ ( error.errorType.namespace == "HTTP" ) or ( [ "EXPRESSION", "STREAM_MEXIMUM_SIZE_EXCEEDED" ] contains  error.errorType.identifier ) ]'>						<set-variable value="#[false]" doc:name="successful = false" doc:id="33ff1eb6-184d-444b-92b9-03dfd93404f0" variableName="successful" />					</on-error-continue>					<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="f3c1ab35-4e0b-487f-b81e-187c5f469146">						<set-variable value="#[false]" doc:name="successful = false" doc:id="f1f0f473-2315-41ed-bee3-832523fec917" variableName="successful" />					</on-error-propagate>				</error-handler>			</try>		</until-successful>			<error-handler >				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="0df66388-bce1-47b2-bf78-98022bc0cfd9">					<set-variable value="#[false]" doc:name="successful = false" doc:id="97357870-7549-4a00-9ccb-58a271e7c20a" variableName="successful" />				</on-error-continue>			</error-handler>		</try>		<validation:is-true doc:name="Is INVOCATION SUCCESSFUL" doc:id="58a479e7-ed74-4e9a-a93b-beed20f65230" expression="#[vars.successful]" message="ERROR GETTING TICKET DATA">			<error-mapping targetType="EXT:CANT-RETRIVE-TICKET-DATA" />		</validation:is-true>        </flow>

https://codeshare.io/5gAz0G

<?xml version="1.0" encoding="UTF-8"?>

<module xmlns="http://www.mulesoft.org/schema/mule/module" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
  xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http"
  xmlns:tns="http://www.mulesoft.org/schema/mule/resilience" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="Resilience"
  prefix="resilience" doc:description="This module relies in runtime provided components"
  xsi:schemaLocation="           
        http://www.mulesoft.org/schema/mule/http 
        http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd             
        http://www.mulesoft.org/schema/mule/module 
        http://www.mulesoft.org/schema/mule/module/current/mule-module.xsd            
        http://www.mulesoft.org/schema/mule/core 
        http://www.mulesoft.org/schema/mule/core/current/mule.xsd            
        http://www.mulesoft.org/schema/mule/resilience 
        http://www.mulesoft.org/schema/mule/resilience/current/mule-resilience.xsd">
  <http:request-config name="httpRequestConfig" />
  <operation name="is-endpoint-alive">
    <parameters>
      <parameter name="url" displayName="URL" type="string" use="REQUIRED" />
      <parameter name="responseTimeoutMillis" displayName="Response Timeout in Milliseconds" type="number" use="OPTIONAL"
        defaultValue="#[2000]" />
      <parameter name="maxRetries" displayName="Max Retries" type="number" use="OPTIONAL" defaultValue="#[3]" />
      <parameter name="millisBetweenRetries" displayName="Milliseconds Between Retries" type="number" use="OPTIONAL"
        defaultValue="#[2000]" />
    </parameters>
    <body>
      <mule:try>
        <tns:retry-http url="#[vars.url]" responseTimeoutMillis="#[vars.responseTimeoutMillis]" maxRetries="#[vars.maxRetries]"
          millisBetweenRetries="#[vars.millisBetweenRetries]" />
        <mule:set-payload value="#[true]" />
        <mule:error-handler>
          <mule:on-error-continue>
            <mule:set-payload value="#[false]" />
          </mule:on-error-continue>
        </mule:error-handler>
      </mule:try>
    </body>
    <output type="boolean" />
  </operation>
  <operation name="retry-http">
    <parameters>
      <parameter name="url" displayName="URL" type="string" use="REQUIRED" />
      <parameter name="responseTimeoutMillis" displayName="Response Timeout in Milliseconds" type="number" use="OPTIONAL"
        defaultValue="#[2000]" />
      <parameter name="maxRetries" displayName="Max Retries" type="number" use="OPTIONAL" defaultValue="#[3]" />
      <parameter name="millisBetweenRetries" displayName="Milliseconds Between Retries" type="number" use="OPTIONAL"
        defaultValue="#[2000]" />
    </parameters>
    <body>
      <mule:try>
        <mule:until-successful maxRetries="#[vars.maxRetries]" millisBetweenRetries="#[vars.millisBetweenRetries]">
          <mule:try>
            <http:request method="GET" url="#[vars.url]" followRedirects="true" responseTimeout="#[vars.responseTimeoutMillis]">
              <http:response-validator>
                <http:success-status-code-validator values="200..299" />
              </http:response-validator>
            </http:request>
          </mule:try>
        </mule:until-successful>
        <mule:error-handler>
          <mule:on-error-continue>
            <mule:raise-error type="RESILIENCE:RETRIES_EXHAUSTED" description="Exhausted re-tries executing http request" />
          </mule:on-error-continue>
        </mule:error-handler>
      </mule:try>
    </body>
    <output type="any" />
    <errors>
      <error type="RETRIES_EXHAUSTED" />
    </errors>
  </operation>
</module>







<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

	<parent>
		<!-- students: replace with your AP org ID -->
		<groupId>87b06c71-0c48-4770-9fd5-06ee267c68fb</groupId>
		<artifactId>solutions-parent-pom</artifactId>
		<version>1.0.0</version>
		<relativePath>../parent-pom/pom.xml</relativePath>
	</parent>

    <groupId>87b06c71-0c48-4770-9fd5-06ee267c68fb</groupId>
    <artifactId>resilience-mule-extension</artifactId>
    <packaging>mule-extension</packaging>
    <version>1.0.0</version>

    <name>Smart Connector: using mule components</name>
    <description>A Mule extension done with pure Mule DSL that depends in the runtime operations (set-payload, set-variable, etc.)</description>


    <properties>
        <mule.version>${app.runtime.semver}</mule.version>
        
    </properties>


    <dependencies>
        <!--Needed to discover the 'xml-based' XmlExtensionLoader for smart connectors-->
        <dependency>
            <groupId>org.mule.runtime</groupId>
            <artifactId>mule-module-extensions-xml-support</artifactId>
            <scope>provided</scope>
        </dependency>
        <!--MUnit Dependencies-->
        <dependency>
            <groupId>com.mulesoft.munit</groupId>
            <artifactId>munit-runner</artifactId>
            <classifier>mule-plugin</classifier>
            <version>${munit.version}</version>
            <scope>test</scope>
        </dependency>
		
		<dependency>
			<groupId>org.mule.connectors</groupId>
			<artifactId>mule-http-connector</artifactId>
			<classifier>mule-plugin</classifier>
		</dependency>
		
    </dependencies>

    <build>
      
                

        <plugins>
            <plugin>
                <groupId>org.mule.runtime.plugins</groupId>
                <artifactId>mule-extensions-maven-plugin</artifactId>
                <extensions>true</extensions>
            </plugin>
            <plugin>
                <groupId>com.mulesoft.munit</groupId>
                <artifactId>munit-extensions-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>

custom logging policy
mvn -B -f bom/pom.xml archetype:generate -DarchetypeGroupId=org.mule.tools -DarchetypeArtifactId=api-gateway-custom-policy-archetype -DarchetypeVersion=1.2.0 -DgroupId=<insert_your_ap_organization_id> -DartifactId=custom-message-logging-policy -Dversion=1.0.0 -Dpackage=mule-policy -DpolicyDescription="Policy for logging messages" -DpolicyName="Custom Message Logging" -DoutputDirectory=../




<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

		<parent>
		<!-- students: replace with your AP org ID -->
		<groupId>87b06c71-0c48-4770-9fd5-06ee267c68fb</groupId>
		<artifactId>solutions-parent-pom</artifactId>
		<version>1.0.0</version>
		<relativePath>../parent-pom/pom.xml</relativePath>
	</parent>

    <groupId>87b06c71-0c48-4770-9fd5-06ee267c68fb</groupId>
    <artifactId>custom-message-logging-policy</artifactId>
    <version>1.0.0</version>

    <name>Custom Message Logging</name>
    <description>Policy for logging messages</description>

    <packaging>mule-policy</packaging>
    
    <build>
        <plugins>
            <plugin>
                <groupId>org.mule.tools.maven</groupId>
                <artifactId>mule-maven-plugin</artifactId>
                <extensions>true</extensions>
            </plugin>
           
        </plugins>
    </build>

</project>


<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:http-policy="http://www.mulesoft.org/schema/mule/http-policy"
  xmlns:http-transform="http://www.mulesoft.org/schema/mule/http-policy-transform" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd                http://www.mulesoft.org/schema/mule/http-policy http://www.mulesoft.org/schema/mule/http-policy/current/mule-http-policy.xsd                http://www.mulesoft.org/schema/mule/http-policy-transform http://www.mulesoft.org/schema/mule/http-policy-transform/current/mule-http-policy-transform.xsd                ">
  <http-policy:proxy name="{{{policyId}}}-custom-policy">
    <http-policy:source>
      <logger level="INFO" message="{{{message}}}" category="org.mule.runtime.logging.policy-{{{policyId}}}" />
      <http-policy:execute-next />
      <logger level="INFO" message="{{{message}}}" category="org.mule.runtime.logging.policy-{{{policyId}}}" />
    </http-policy:source>
  </http-policy:proxy>

</mule>



id: Custom Message Logging
name: Custom Message Logging
description: Policy for logging messages
category: Custom
type: custom
resourceLevelSupported: true
encryptionSupported: false
standalone: true
requiredCharacteristics: []
providedCharacteristics: []
configuration: 
  - propertyName: message
    name: Message
    description: |
      Mule Expression for extracting information from the message to log. e.g. #[attributes.headers['id']]
    type: expression
    optional: false
    
mvn clean deploy

custom connector

mvn deploy -Pdeploy-to-exchange-v3  
